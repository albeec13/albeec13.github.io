<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nginx on TheWalrus</title>
    <link>https://blog.thewalr.us/tags/nginx/</link>
    <description>Recent content in Nginx on TheWalrus</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 05 Apr 2019 22:35:10 -0500</lastBuildDate>
    <atom:link href="https://blog.thewalr.us/tags/nginx/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using Nginx Stream Directive to Host SSH and Multiple HTTPS Servers On One External Port and a Single Nginx Instance</title>
      <link>https://blog.thewalr.us/2019/04/05/using-nginx-stream-directive-to-host-ssh-and-multiple-https-servers-on-one-external-port-and-a-single-nginx-instance/</link>
      <pubDate>Fri, 05 Apr 2019 22:35:10 -0500</pubDate>
      <guid>https://blog.thewalr.us/2019/04/05/using-nginx-stream-directive-to-host-ssh-and-multiple-https-servers-on-one-external-port-and-a-single-nginx-instance/</guid>
      <description>&lt;h1 id=&#34;the-problem&#34;&gt;The Problem&lt;/h1&gt;&#xA;&lt;p&gt;If you&amp;rsquo;ve ever tinkered with web services / website building and like to tinker with self-hosting, you&amp;rsquo;re probably already familiar with one of the major webservers like Apache or nginx. You may also be into hosting other non-HTTP(s) services such as SSH, whether just for remote management of a linux box or, as I like to do, tunneling your traffic through a home linux server when traveling and using open or un-secured WiFi networks, just to be safe. Normally, this is fine, and you can run your HTTPS traffic on the standard port 443, and SSH on 22 (or ideally some random higher-numbered port to avoid online sniffers/scanners). Sometimes, such as when using public WiFi networks or hotel networks, you can run into a situation where outbound ports on that network are blocked, making it difficult or impossible to reach your SSH server. Generally, ports like 80 and 443 are always open for outbound traffic to avoid breaking basically all normal HTTP/HTTPS traffic, and we can utilize this fact to get around the blocked port problem.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
